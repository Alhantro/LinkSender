Программа состоит из 4 классов.
__________________________________________________________
class User
Данные о пользователе. 
Хэширование идет по алгоримту MD5
enum STATUS - перечисление состояний USER (есть новые добавления в друзья, новая ссылка, и т.д)
Personal File имеет адрес: http://host.ex/"_name_hash"+".usr"
Авторизация идет путем сравнения текущего хэша пароля в файле с заданным пользователем.
#acceptRequest пишет имя User в файл к name в секцию Friends.
__________________________________________________________
class Request
Запрос от admin к Name
Этот класс будет увеличивать функционал по мере необходимости.
__________________________________________________________
class Link
Класс обарачивает ссылку. Будет увеличивать функционал по мере необходимости.
__________________________________________________________
Логика программы следующая:
При регистрации создается пользователь, далее заполняется его персональный файл. Структура файла:
-------
Ссылка 1
...
Ссылка N
-------
Друг 1
...
Друг N
-------
Запрос 1
...
Запрос N
-------
Пароль
-------
Желательно хранить его в формате Lua.

При необходимости отправить незнакомому человеку формируется Request и в его файл записывается информация с вашим именем в раздел "Запрос", пареллельно с этим формируется новый файл с названием "admin_hash"+'_'+"friend_hash"+".ls", куда записывается ссылка. Если ответ от Friend отрицательный, то файл удаляется.
Если ссылкой делятся знакомые люди, то они просто записывают их в общий файл. 

Хранится не более 10 ссылок. Удаляем в порядке очереди.
Лимита на друзей нет.
___
||??Необходим подсчет по памяти - сколько нам нужно??||
___

Делать классы нужно максимально не привязывая их. В будущем мы многое (как минимум - добавим БД)
__________________________________________________________
GUI

По получению рабочего черновика из консоли, напишем интерфейс на Qt. Это позволит не писать разные стили для Windows и Linux.
Мобильные версии для Android можно писать, основываясь на Android NDK.  Просто повесить на консольный каркас интерфейс.

__________________________________________________________
Если я где-то ошибся или вы добавили новый метод - пишите сюда, если не очевидно, что н делает.